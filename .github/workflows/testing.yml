name: Pytest MSS

on:
  workflow_call:
    inputs:
      image_suffix:
        required: true
        type: string
    secrets:
      PAT:

env:
  mamba-env: mss-${{ inputs.image_suffix }}-env

jobs:
  Test-MSS:
    runs-on: ubuntu-latest

    container:
      image: openmss/testing-${{ inputs.image_suffix }}

    strategy:
      fail-fast: false
      matrix:
        order: ["normal", "reverse"]

    steps:
    - uses: actions/checkout@v4

    - name: Check for changed dependencies
      run: cmp -s /meta.yaml localbuild/meta.yaml && cmp -s /development.txt requirements.d/development.txt ||
        (echo Dependencies differ && echo "triggerdockerbuild=yes" >> $GITHUB_ENV )

    - name: Install pyvirtualdisplay if on stable
      if: ${{ inputs.image_suffix == 'stable' }}
      run: |
        source /opt/conda/etc/profile.d/conda.sh
        source /opt/conda/etc/profile.d/mamba.sh
        mamba install -n mss-${{ inputs.image_suffix }}-env pyvirtualdisplay

    - name: Always rebuild dependencies for scheduled builds (started from testing-scheduled.yml)
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: echo "triggerdockerbuild=yes" >> $GITHUB_ENV

    - name: Invoke dockertesting image creation
      # The image creation is intentionally only triggered for push events because
      # scheduled tests should just check that new dependency versions do not break the
      # tests, but should not update the image.
      if: ${{ (github.ref_name == 'stable' || github.ref_name == 'develop') && github.event_name == 'push' && env.triggerdockerbuild == 'yes' && matrix.order == 'normal' }}
      uses: benc-uk/workflow-dispatch@v1.2.2
      with:
        workflow: Update Image testing-${{ inputs.image_suffix }}
        repo: Open-MSS/dockertesting
        ref: main
        token: ${{ secrets.PAT }}

    - name: Reinstall dependencies if changed
      if: ${{ env.triggerdockerbuild == 'yes' }}
      run: |
        cat localbuild/meta.yaml |
          sed -n '/^requirements:/,/^test:/p' |
          sed -e "s/.*- //" |
          sed -e "s/menuinst.*//" |
          sed -e "s/.*://" > reqs.txt
        cat requirements.d/development.txt >> reqs.txt
        cat reqs.txt
        mamba env remove -n ${{ env.mamba-env }}
        mamba create -y -n ${{ env.mamba-env }} --file reqs.txt

    - name: Print conda list
      run: mamba run --no-capture-output -n ${{ env.mamba-env }} mamba list

    - name: Run tests
      timeout-minutes: 10
      run: mamba run --no-capture-output -n ${{ env.mamba-env }} xvfb-run pytest
        -v -n 6 --dist loadfile --max-worker-restart 4 --durations=20 --cov=mslib
        ${{ (matrix.order == 'normal' && ' ') || (matrix.order == 'reverse' && '--reverse') }} tests

    - name: Collect coverage
      if: ${{ (github.event_name == 'push' || github.event_name == 'pull_request') && matrix.order == 'normal' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global --add safe.directory /__w/MSS/MSS
        mamba install -n ${{ env.mamba-env }} coveralls
        mamba run --no-capture-output -n ${{ env.mamba-env }} coveralls --service=github
