name: Pytest MSS

on:
  workflow_call:
    inputs:
      branch_name:
        required: true
        type: string
      event_name:
        required: true
        type: string
    secrets:
      PAT:
        required: true

env:
  PAT: ${{ secrets.PAT }}
  EVENT: ${{ inputs.event_name }}

jobs:
  Test-MSS:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    container:
      image: openmss/testing-${{ inputs.branch_name }}

    strategy:
      fail-fast: false
      matrix:
        order: ["normal", "reverse"]
        a: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        b: [0, 1, 2, 3, 4]

    steps:
    - name: Trust My Directory
      run: git config --global --add safe.directory /__w/MSS/MSS

    - uses: actions/checkout@v4

    - name: Check for changed dependencies
      run: |
        cmp -s /meta.yaml localbuild/meta.yaml && cmp -s /development.txt requirements.d/development.txt \
        || (echo Dependencies differ \
            && echo "triggerdockerbuild=yes" >> $GITHUB_ENV )

    - name: Always rebuild dependencies for scheduled builds
      if: ${{ success() && inputs.event_name == 'schedule' && inputs.branch_name == 'stable' && env.triggerdockerbuild != 'yes' }}
      run: |
        echo "triggerdockerbuild=yes" >> $GITHUB_ENV

    - name: Reinstall dependencies if changed
      if: ${{ success() && env.triggerdockerbuild == 'yes' }}
      run: |
        cd $GITHUB_WORKSPACE \
        && source /opt/conda/etc/profile.d/conda.sh \
        && source /opt/conda/etc/profile.d/mamba.sh \
        && mamba activate mss-${{ inputs.branch_name }}-env \
        && mamba deactivate \
        && cat localbuild/meta.yaml \
        | sed -n '/^requirements:/,/^test:/p' \
        | sed -e "s/.*- //" \
        | sed -e "s/menuinst.*//" \
        | sed -e "s/.*://" > reqs.txt \
        && cat requirements.d/development.txt >> reqs.txt \
        && cat reqs.txt \
        && mamba env remove -n mss-${{ inputs.branch_name }}-env \
        && mamba create -y -n mss-${{ inputs.branch_name }}-env --file reqs.txt

    - name: Print conda list
      run: |
        source /opt/conda/etc/profile.d/conda.sh \
        && source /opt/conda/etc/profile.d/mamba.sh \
        && mamba activate mss-${{ inputs.branch_name }}-env \
        && mamba list

    - name: Run tests
      timeout-minutes: 10
      run: |
        cd $GITHUB_WORKSPACE \
        && source /opt/conda/etc/profile.d/conda.sh \
        && source /opt/conda/etc/profile.d/mamba.sh \
        && mamba activate mss-${{ inputs.branch_name }}-env \
        && xvfb-run pytest -v -n 6 --dist loadfile --max-worker-restart 4 --durations=20 --cov=mslib \
          ${{ (matrix.order == 'normal' && ' ') || (matrix.order == 'reverse' && '--reverse') }} tests

    - name: Collect coverage
      if: ${{ success() && inputs.event_name == 'push' && inputs.branch_name == 'develop' && matrix.order == 'normal' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd $GITHUB_WORKSPACE \
        && source /opt/conda/etc/profile.d/conda.sh \
        && source /opt/conda/etc/profile.d/mamba.sh \
        && mamba activate mss-${{ inputs.branch_name }}-env \
        && mamba install coveralls \
        && coveralls --service=github

    - name: Invoke dockertesting image creation
      if: ${{ always() && inputs.event_name == 'push' && env.triggerdockerbuild == 'yes' && matrix.order == 'normal' }}
      uses: benc-uk/workflow-dispatch@v1.2.2
      with:
        workflow: Update Image testing-${{ inputs.branch_name }}
        repo: Open-MSS/dockertesting
        ref: main
        token: ${{ secrets.PAT }}
