name: test GSOC branches

on:
  push:
    branches:
    - 'GSOC**'
  pull_request:
    branches:
    - 'GSOC**'

jobs:
  Test-MSS-GSOC:
    runs-on: ubuntu-latest

    container:
      image: openmss/testing-develop

    strategy:
      fail-fast: false
      matrix:
        order: ["normal", "reverse"]

    steps:
    - uses: actions/checkout@v4

    - name: Check for changed dependencies
      run: cmp -s /meta.yaml localbuild/meta.yaml && cmp -s /development.txt requirements.d/development.txt ||
        (echo Dependencies differ && echo "triggerdockerbuild=yes" >> $GITHUB_ENV )

    - name: Reinstall dependencies if changed
      if: ${{ env.triggerdockerbuild == 'yes' }}
      run: |
        cat localbuild/meta.yaml |
          sed -n '/^requirements:/,/^test:/p' |
          sed -e "s/.*- //" |
          sed -e "s/menuinst.*//" |
          sed -e "s/.*://" > reqs.txt
        cat requirements.d/development.txt >> reqs.txt
        cat reqs.txt
        mamba env remove -n mss-develop-env
        mamba create -y -n mss-develop-env --file reqs.txt

    - name: Print conda list
      run: mamba run --no-capture-output -n mss-develop-env mamba list

    - name: Run tests
      timeout-minutes: 10
      run: mamba run --no-capture-output -n mss-develop-env xvfb-run pytest
        -v -n 6 --dist loadfile --max-worker-restart 4 --durations=20 --cov=mslib
        ${{ (matrix.order == 'normal' && ' ') || (matrix.order == 'reverse' && '--reverse') }} tests

    - name: Collect coverage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global --add safe.directory /__w/MSS/MSS
        mamba install -n mss-develop-env coveralls
        mamba run --no-capture-output -n mss-develop-env coveralls --service=github
