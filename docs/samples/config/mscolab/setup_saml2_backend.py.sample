import os
import sys
import warnings
import yaml
from saml2 import SAMLError
from saml2.client import Saml2Client
from saml2.config import SPConfig
from urllib.parse import urlparse


class setup_saml2_backend:
    from mslib.mscolab.conf import mscolab_settings

    CONFIGURED_IDPS = [
        # configure your idps here
        {
            'idp_identity_name': 'localhost_test_idp',  #  make sure to use underscore for the blanks
            'idp_data': {
                'idp_name': 'Testing Identity Provider',  # this name is used on the Login page to connect to the Provider.
            }
        },

    ]

    if os.path.exists(f"{mscolab_settings.SSO_DIR}/mss_saml2_backend.yaml"):
        with open(f"{mscolab_settings.SSO_DIR}/mss_saml2_backend.yaml", encoding="utf-8") as fobj:
            yaml_data = yaml.safe_load(fobj)
        # go through configured IDPs and set conf file paths for particular files
        for configured_idp in CONFIGURED_IDPS:
            # set CRTs and metadata paths for the localhost_test_idp
            if 'localhost_test_idp' == configured_idp['idp_identity_name']:
                yaml_data["config"]["localhost_test_idp"]["key_file"] = \
                    f'{mscolab_settings.SSO_DIR}/key_mscolab.key'  # set path to your mscolab key file
                yaml_data["config"]["localhost_test_idp"]["cert_file"] = \
                    f'{mscolab_settings.SSO_DIR}/crt_mscolab.crt'  # set path to your mscolab certificate file
                yaml_data["config"]["localhost_test_idp"]["metadata"]["local"][0] = \
                    f'{mscolab_settings.SSO_DIR}/idp.xml'  # set path to your idp metadata xml file

                # configuration localhost_test_idp Saml2Client
                try:
                    if not os.path.exists(yaml_data["config"]["localhost_test_idp"]["metadata"]["local"][0]):
                        yaml_data["config"]["localhost_test_idp"]["metadata"]["local"] = []
                        warnings.warn("idp.xml file does not exists !\
                                        Ignore this warning when you initialize metadata.")

                    localhost_test_idp = SPConfig().load(yaml_data["config"]["localhost_test_idp"])
                    sp_localhost_test_idp = Saml2Client(localhost_test_idp)

                    configured_idp['idp_data']['saml2client'] = sp_localhost_test_idp
                    for url_pair in (yaml_data["config"]["localhost_test_idp"]
                                     ["service"]["sp"]["endpoints"]["assertion_consumer_service"]):
                        saml_url, binding = url_pair
                        path = urlparse(saml_url).path
                        configured_idp['idp_data']['assertion_consumer_endpoints'] = \
                            configured_idp['idp_data'].get('assertion_consumer_endpoints', []) + [path]

                except SAMLError:
                    warnings.warn("Invalid Saml2Client Config with localhost_test_idp ! Please configure with\
                                    valid CRTs metadata and try again.")
                    sys.exit()

                # if multiple IdPs exists, development should need to implement accordingly below
                """
                    if 'idp_2'== configured_idp['idp_identity_name']:
                        # rest of code
                        # set CRTs and metadata paths for the idp_2
                        # configuration idp_2 Saml2Client
                """
